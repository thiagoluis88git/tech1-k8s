apiVersion: v1
kind: Service
metadata:
  name: svc-customer
  labels:
    kubernetes.io/service-name: svc-customer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
spec:
  type: LoadBalancer
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3210
  selector:
    app: fastfood-customer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastfood-customer
  labels:
    app: fastfood-customer
spec:
  selector:
    matchLabels:
      app: fastfood-customer
  template:
    metadata:
      labels:
        app: fastfood-customer
    spec:
      containers:
      - name: fastfood-customer
        image: thiagoluis88/fastfood-customers:1.0.1
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
        envFrom:
          - secretRef:
              name: app-env-secret
          - configMapRef:
              name: cm-customer
        ports:
        - containerPort: 3210
          # name: app
        # - containerPort: 3211
        #   name: redoc
        livenessProbe:
          httpGet:
            path: /health
            port: 3210
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 3210
          periodSeconds: 10
          failureThreshold: 5
          successThreshold: 1
          initialDelaySeconds: 3
        resources:
          requests:
            cpu: 50m
      # volumes:
      #   - name: secrets-store-inline
      #     csi:
      #       driver: secrets-store.csi.k8s.io
      #       readOnly: true
      #       volumeAttributes:
      #         secretProviderClass: "aws-secrets"
