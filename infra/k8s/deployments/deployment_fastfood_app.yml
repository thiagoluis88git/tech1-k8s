# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
#   name: service-fastfood-app
#   labels:
#     app: service-fastfood-app
# spec:
#   type: LoadBalancer
#   ports:
#   - port: 80
#     name: service-fastfood-app
#     targetPort: 3210
#   selector:
#     app: fastfood-app

apiVersion: v1
kind: Service
metadata:
  name: servicefastfood
  annotations:
    # service.beta.kubernetes.io/aws-load-balancer-type: nlb
    # # service.beta.kubernetes.io/aws-load-balancer-type: external
    # service.beta.kubernetes.io/aws-load-balancer-scheme: internal
    # service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
    # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"

    # service.beta.kubernetes.io/aws-load-balancer-type: alb
    # service.beta.kubernetes.io/aws-load-balancer-scheme: internal
    # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"

    # service.beta.kubernetes.io/aws-load-balancer-type: external
    # service.beta.kubernetes.io/aws-load-balancer-scheme: internal

    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
spec:
  type: LoadBalancer
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3210
  selector:
    app: fastfood-app

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastfood-app
  labels:
    app: fastfood-app
spec:
  selector:
    matchLabels:
      app: fastfood-app
  template:
    metadata:
      labels:
        app: fastfood-app
    spec:
      containers:
      - name: fastfood-app
        image: thiagoluis88/fastfood-app:0.0.38
        envFrom:
          - secretRef:
              name: app-env-secret
          - configMapRef:
              name: cm-app
          - configMapRef:
              name: cm-database
        ports:
        - containerPort: 3210
          # name: app
        # - containerPort: 3211
        #   name: redoc
        livenessProbe:
          httpGet:
            path: /health
            port: 3210
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 3210
          periodSeconds: 10
          failureThreshold: 5
          successThreshold: 1
          initialDelaySeconds: 3
        resources:
          requests:
            cpu: 50m
